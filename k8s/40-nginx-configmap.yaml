apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    worker_processes auto;

    events {
      worker_connections 1024;
    }

    http {
      include       mime.types;
      default_type  application/octet-stream;
      sendfile      on;

      upstream backend {
        server backend:5000;
      }

      upstream transactions {
        server transactions:3000;
      }

      upstream studentportfolio {
        server studentportfolio:80;
      }

      server {
        listen 80;

        # Backend APIs
        location /api/backend/ {
          proxy_pass http://backend/;
          proxy_http_version 1.1;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Transaction API direct (if called by UI)
        location = /api/transactions {
          proxy_pass http://backend/api/transactions;
          proxy_http_version 1.1;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Transaction service (raw)
        location /api/transactions-service/ {
          proxy_pass http://transactions/;
          proxy_http_version 1.1;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Everything else goes to the student portfolio static site
        location / {
          proxy_pass http://studentportfolio;
          proxy_http_version 1.1;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }
      }
    }
